{"version":3,"sources":["assets/phone.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useStyles","makeStyles","root","color","borderBottomColor","borderColor","CustomButton","withStyles","theme","backgroundColor","Button","useState","display","setDisplay","score","setScore","sentiment","setSentiment","data","setData","classes","a","myObj","fetch","method","headers","body","JSON","stringify","then","response","json","jsonified","console","log","useEffect","catch","e","Grid","className","direction","justify","spacing","container","item","xs","style","marginTop","width","textAlign","sm","TextField","onChange","target","value","label","multiline","variant","onClick","sendData","Typography","marginLeft","CircularProgress","size","src","logo","alt","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.461d15eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/phone.5e738171.svg\";","import logo from './assets/phone.svg';\nimport './App.css';\nimport {makeStyles,Button,withStyles,Grid,TextField,Typography,CircularProgress} from '@material-ui/core'\nimport {useEffect,useState} from 'react'\n\nfunction App() {\n  const useStyles = makeStyles({\n    root: {\n      '& label.Mui-focused': {\n        color: '#f9cec3 ',\n      },\n      \n      '& label':{\n        color: 'rgba(249, 206, 195, 0.5)'\n      },\n      '& .MuiInput-underline:after': {\n        borderBottomColor: 'green',\n      },\n      \"& .MuiFilledInput-root\":{\n        color:\"#f9cec3\"\n      },\n      '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n          borderColor: 'rgba(249, 206, 195, 0.5)',\n        },\n        '&:hover fieldset': {\n          borderColor: '#f9cec3',\n        },\n        '&.Mui-focused fieldset': {\n          borderColor: '#f9cec3',\n        },    \n      },\n      '& .MuiOutlinedInput-input': {\n        color:'#f9cec3'      \n      },  \n    }\n  });\n  \n  const CustomButton = withStyles((theme) => ({\n    root: {\n      color: \"f9cec3\",\n      backgroundColor: \"#d4516f\",\n      \"&:hover\": {\n        backgroundColor: \"rgba(212, 81, 111, 0.7)\",\n        color: '#f9cec3',\n      }\n    }\n  }))(Button);\n\n  const [display,setDisplay]=useState(0);\n  const [score,setScore]=useState(0);\n  const [sentiment,setSentiment]=useState(0);\n  const [data,setData]=useState('');\n  // let myObj={\"text\":data};\n  const handlechange = e =>{\n    console.log(`typed => ${e.target.value}`)\n    setData(e.target.value)\n  }\n\n  const classes = useStyles();\n\n  useEffect(()=>{\n    console.log('App re-rendered');\n    fetch('/api').then(\n      response => response.json()\n    ).then(\n      jsonified => console.log(jsonified)\n    ).catch(\n      e=>console.log(e)\n    )\n  },[])\n  \n  async function sendData(){\n    let myObj ={'text':data}\n    try{\n      setDisplay(1)\n      await fetch('/api',{\n        method:\"POST\",\n        headers:{\n          'Accept':'application/json',\n          'Content-type':'application/json',\n        },\n        body: JSON.stringify(myObj)\n      })\n      .then(\n        response => response.json()\n      )\n      .then(\n        jsonified =>{ console.log(jsonified)\n        setDisplay(2)\n        setScore(jsonified['score'])\n        setSentiment(jsonified['sentiment'])\n        })\n    }\n    catch(e){\n      setDisplay(3)\n      console.log(e)\n    }\n    \n  }\n\n  return (\n    <Grid className=\"app-container\"\n     direction='row'\n     justify='space-evenly' \n     spacing={5} \n     container>\n       <Grid item xs={12}>\n       <h1 style={{color:'#f9cec3',marginTop:'0px',width:'100%',textAlign:'center'}}>AGrA</h1>\n       </Grid>\n\n      <Grid item sm={4} xs={12}> \n\n        <TextField \n        style={{width:\"100%\"}}\n        className={classes.root}\n        onChange={handlechange}\n        label='Enter your review here' value={data} multiline  variant='outlined'/>\n        \n        <br/><br/>\n       \n        <CustomButton onClick={()=>{sendData()}} variant='contained' color='primary'>Get Sentiment</CustomButton>\n        &nbsp;&nbsp;&nbsp;\n        <Typography style={{color:'#f9cec3',display:'inline-block',marginLeft:'20px'}}>\n        {display===0?\"\":display===1? <CircularProgress style={{'color': '#f9cec3'}} size={20}/> :display===2?`${sentiment}  SCORE : ${score}`:'SOME VALUES MISSING IN ENTRY'}\n        </Typography>      \n\n      </Grid>\n\n      <Grid item sm={3} xs={12}>\n        <img src={logo} alt='sentiment' style={{width:'100%',maxWidth:'500px'}}></img>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}